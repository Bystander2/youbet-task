openapi: 3.0.0
paths:
  /:
    get:
      operationId: AppController_getHello
      parameters: []
      responses:
        '200':
          description: ''
  /projects:
    get:
      operationId: GithubController_getProjects
      parameters:
        - name: tags
          required: false
          in: query
          schema:
            type: string
        - name: offset
          required: false
          in: query
          schema:
            type: number
        - name: limit
          required: false
          in: query
          schema:
            type: number
      responses:
        '200':
          description: ''
  /tutorial/{githubId}:
    get:
      operationId: GithubController_getTutorialContent
      parameters:
        - name: githubId
          required: false
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
  /project/{githubId}/detail:
    get:
      operationId: GithubController_getProjectDetail
      parameters:
        - name: githubId
          required: false
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
  /tutorials:
    get:
      operationId: GithubController_getTutorials
      parameters:
        - name: categories
          required: false
          in: query
          schema:
            type: string
        - name: limit
          required: false
          in: query
          schema:
            type: number
      responses:
        '200':
          description: ''
  /user-orgs:
    get:
      operationId: GithubController_getUserOrgs
      parameters: []
      responses:
        '200':
          description: ''
  /org-repos:
    get:
      operationId: GithubController_getOrgRepos
      parameters:
        - name: org
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
  /tutorial-chapters:
    get:
      operationId: GithubController_getMdbookChapters
      parameters:
        - name: owner
          required: true
          in: query
          schema:
            type: string
        - name: repo
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
  /fetch-markdown:
    get:
      operationId: GithubController_fetchMarkdown
      parameters:
        - name: path
          required: true
          in: query
          schema:
            type: string
        - name: owner
          required: true
          in: query
          schema:
            type: string
        - name: repo
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
  /import-project:
    post:
      operationId: GithubController_importProject
      parameters: []
      responses:
        '201':
          description: ''
  /import-project-for-user:
    post:
      operationId: GithubController_importProjectForUser
      parameters: []
      responses:
        '201':
          description: ''
  /task/{githubId}:
    get:
      operationId: GithubController_getTask
      parameters:
        - name: githubId
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
  /tasks:
    get:
      operationId: GithubController_getTasks
      parameters:
        - name: org
          required: true
          in: query
          schema:
            type: string
        - name: project
          required: true
          in: query
          schema:
            type: string
        - name: assignee
          required: true
          in: query
          schema:
            type: string
        - name: states
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
  /my-tasks:
    get:
      operationId: GithubController_myTasks
      parameters:
        - name: states
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
  /claim-task:
    post:
      operationId: GithubController_claimTask
      parameters: []
      responses:
        '201':
          description: ''
  /disclaim-task:
    post:
      operationId: GithubController_disclaimTask
      parameters: []
      responses:
        '201':
          description: ''
  /github-webhook:
    post:
      operationId: GithubController_handleWebhook
      parameters: []
      responses:
        '201':
          description: ''
  /link-wallet:
    post:
      operationId: YoubetController_linkWallet
      parameters: []
      responses:
        '201':
          description: ''
      tags: &ref_0
        - Youbet
  /user-points:
    get:
      operationId: YoubetController_getUserPoints
      parameters:
        - name: address
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags: *ref_0
  /all-tasks:
    get:
      operationId: YoubetController_getAllTasks
      parameters: []
      responses:
        '200':
          description: ''
      tags: *ref_0
  /get-linked-wallet:
    get:
      operationId: YoubetController_getLinkedWallet
      parameters:
        - name: github
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags: *ref_0
  /my-info:
    get:
      operationId: UserController_myTasks
      summary: Get current user information
      parameters: []
      responses:
        '200':
          description: successfully get current user information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      tags: &ref_1
        - User
  /leaderboard:
    get:
      operationId: UserController_leaderboard
      summary: Get user leaderboard
      parameters:
        - name: offset
          required: false
          in: query
          description: offset
          schema:
            type: number
        - name: limit
          required: false
          in: query
          schema:
            type: number
      responses:
        '200':
          description: ''
      tags: *ref_1
  /auth/github:
    get:
      operationId: AuthController_githubAuth
      parameters: []
      responses:
        '200':
          description: ''
      tags: &ref_2
        - Auth
  /auth/github/callback:
    get:
      operationId: AuthController_githubAuthRedirect
      parameters: []
      responses:
        '200':
          description: ''
      tags: *ref_2
info:
  title: Your API Title
  description: API description
  version: '1.0'
  contact: {}
tags: []
servers: []
components:
  securitySchemes:
    bearer:
      scheme: bearer
      bearerFormat: JWT
      type: http
  schemas:
    User:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
        avatarUrl:
          type: string
        displayName:
          type: string
        location:
          type: string
        bio:
          type: string
        followers:
          type: number
        following:
          type: number
        twitterUsername:
          type: string
        githubAccessToken:
          type: string
        githubRefreshToken:
          type: string
      required:
        - username
        - email
        - avatarUrl
        - displayName
        - location
        - bio
        - followers
        - following
        - twitterUsername
        - githubAccessToken
        - githubRefreshToken
